"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/upload",{

/***/ "./components/uploadForm/uploadForm.js":
/*!*********************************************!*\
  !*** ./components/uploadForm/uploadForm.js ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ UploadForm; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _upload_module_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./upload.module.scss */ \"./components/uploadForm/upload.module.scss\");\n/* harmony import */ var _upload_module_scss__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_upload_module_scss__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _uploadPDF_uploadPDF__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../uploadPDF/uploadPDF */ \"./components/uploadPDF/uploadPDF.js\");\n/* harmony import */ var _uploadIMG_uploadIMG__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../uploadIMG/uploadIMG */ \"./components/uploadIMG/uploadIMG.js\");\n/* harmony import */ var _uploadVID_uploadVID__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../uploadVID/uploadVID */ \"./components/uploadVID/uploadVID.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n// function UploadPDF() {\n//   const [pdfFile, setPdfFile] = useState(null);\n//   const [fileName, setFileName] = useState(\"\");\n//   const [mtrlNo, setMtrlNo] = useState(\"\");\n//   const [serCorInst, setSerCorInst] = useState(\"\");\n//   const [estBr, setEstBr] = useState(\"\");\n//   const [dteSecSubPublisher, setDteSecSubPublisher] = useState(\"\");\n//   const [subSecVolAuthor, setSubSecVolAuthor] = useState(\"\");\n//   const [year, setYear] = useState(\"\");\n//   const [collectionType, setCollectionType] = useState(\"\");\n//   const [no, setNo] = useState(\"\");\n//   const [loc, setLoc] = useState(\"\");\n//   const [location, setLocation] = useState(\"\");\n//   const [pageNo, setPageNo] = useState(\"\");\n//   const [noOfCopies, setNoOfCopies] = useState(\"\");\n//   const [remarks, setRemarks] = useState(\"\");\n//   const [message, setMessage] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const router = useRouter();\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     router.push(\"/Login\");\n//   };\n//   const handleFileChange = (event) => {\n//     const file = event.target.files[0];\n//     if (file && file.type === \"application/pdf\") {\n//       setPdfFile(file);\n//     } else {\n//       alert(\"Please select a valid PDF file\");\n//     }\n//   };\n//   const handleFileNameChange = (event) => {\n//     setFileName(event.target.value);\n//   };\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     if (!pdfFile) {\n//       alert(\"Please select a PDF file\");\n//       return;\n//     }\n//     if (!fileName) {\n//       alert(\"Please enter a file name\");\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"file\", pdfFile, fileName + \".pdf\");\n//     formData.append(\n//       \"metadata\",\n//       JSON.stringify({\n//         metadata: {\n//           materialNo: mtrlNo,\n//           Accession_number: {\n//             Ser_Corps_Inst: serCorInst,\n//             Est_Br: estBr,\n//             Sub_Publisher: dteSecSubPublisher,\n//             Vol: subSecVolAuthor,\n//             Year: year,\n//             Collection_type: collectionType,\n//             No: no,\n//             Loc: loc,\n//           },\n//           Location: location,\n//           Page_no: pageNo,\n//           No_of_copies: noOfCopies,\n//           Remarks: remarks,\n//         },\n//       })\n//     );\n//     setIsLoading(true);\n//     try {\n//       const response = await fetch(\"http://localhost:8080/pdf/create\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n//       const result = await response.json();\n//       console.log(result);\n//       if (response.ok) {\n//         setMessage(\"File uploaded successfully\");\n//       } else {\n//         setMessage(\"Error uploading file\");\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       setMessage(\"Error uploading file\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n//   return (\n//     <div className={styles[\"upload-pdf-container\"]}>\n//       <h2>Upload PDF</h2>\n//       {message && <div className={styles[\"message\"]}>{message}</div>}\n//       <form onSubmit={handleSubmit}>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"pdfFile\">Select PDF File:</label>\n//           <br />\n//           <input\n//             type=\"file\"\n//             id=\"pdfFile\"\n//             name=\"pdfFile\"\n//             accept=\".pdf\"\n//             onChange={handleFileChange}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"fileName\">Enter File Name:</label>\n//           <br />\n//           <input\n//             type=\"text\"\n//             id=\"fileName\"\n//             name=\"fileName\"\n//             value={fileName}\n//             onChange={handleFileNameChange}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"mtrlNo\">Mtrl No:</label>\n//           <br />\n//           <input\n//             type=\"text\"\n//             id=\"mtrlNo\"\n//             name=\"mtrlNo\"\n//             value={mtrlNo}\n//             onChange={(e) => setMtrlNo(e.target.value)}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"serCorInst\">Ser/Corps/Inst:</label>\n//           <br />\n//           <input\n//             type=\"text\"\n//             id=\"serCorInst\"\n//             name=\"serCorInst\"\n//             value={serCorInst}\n//             onChange={(e) => setSerCorInst(e.target.value)}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"estBr\">Est/Br:</label>\n//           <br />\n//           <input\n//             type=\"text\"\n//             id=\"estBr\"\n//             name=\"estBr\"\n//             value={estBr}\n//             onChange={(e) => setEstBr(e.target.value)}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"dteSecSubPublisher\">Dte/Sec/Sub/Publisher:</label>\n//           <br />\n//           <input\n//             type=\"text\"\n//             id=\"dteSecSubPublisher\"\n//             name=\"dteSecSubPublisher\"\n//             value={dteSecSubPublisher}\n//             onChange={(e) => setDteSecSubPublisher(e.target.value)}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"subSecVolAuthor\">Sub Sec/Vol/Author:</label>\n//           <br />\n//           <input\n//             type=\"text\"\n//             id=\"subSecVolAuthor\"\n//             name=\"subSecVolAuthor\"\n//             value={subSecVolAuthor}\n//             onChange={(e) => setSubSecVolAuthor(e.target.value)}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"year\">Year:</label>\n//           <br />\n//           <input\n//             type=\"text\"\n//             id=\"year\"\n//             name=\"year\"\n//             value={year}\n//             onChange={(e) => setYear(e.target.value)}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"collectionType\">Collection Type:</label>\n//           <br />\n//           <input\n//             type=\"text\"\n//             id=\"collectionType\"\n//             name=\"collectionType\"\n//             value={collectionType}\n//             onChange={(e) => setCollectionType(e.target.value)}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"no\">No:</label>\n//           <br />\n//           <input\n//             type=\"text\"\n//             id=\"no\"\n//             name=\"no\"\n//             value={no}\n//             onChange={(e) => setNo(e.target.value)}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"loc\">Loc:</label>\n//           <br />\n//           <input\n//             type=\"text\"\n//             id=\"loc\"\n//             name=\"loc\"\n//             value={loc}\n//             onChange={(e) => setLoc(e.target.value)}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"location\">Location:</label>\n//           <br />\n//           <input\n//             type=\"text\"\n//             id=\"location\"\n//             name=\"location\"\n//             value={location}\n//             onChange={(e) => setLocation(e.target.value)}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"pageNo\">Page No:</label>\n//           <br />\n//           <input\n//             type=\"text\"\n//             id=\"pageNo\"\n//             name=\"pageNo\"\n//             value={pageNo}\n//             onChange={(e) => setPageNo(e.target.value)}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"noOfCopies\">No of Copies:</label>\n//           <br />\n//           <input\n//             type=\"text\"\n//             id=\"noOfCopies\"\n//             name=\"noOfCopies\"\n//             value={noOfCopies}\n//             onChange={(e) => setNoOfCopies(e.target.value)}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"remarks\">Remarks:</label>\n//           <br />\n//           <textarea\n//             id=\"remarks\"\n//             name=\"remarks\"\n//             value={remarks}\n//             onChange={(e) => setRemarks(e.target.value)}\n//           />\n//         </div>\n//         <button\n//           type=\"submit\"\n//           className={styles[\"submit-button\"]}\n//           disabled={isLoading}\n//         >\n//           {isLoading ? \"Uploading...\" : \"Upload\"}\n//         </button>\n//         <button\n//           type=\"button\"\n//           className={styles[\"submit-button\"]}\n//           onClick={handleLogout}\n//         >\n//           Logout\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n// function UploadImage() {\n//   const [imageFile, setImageFile] = useState(null);\n//   const [fileName, setFileName] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [division, setDivision] = useState(\"\");\n//   const [newDivision, setNewDivision] = useState(\"\");\n//   const [divisions, setDivisions] = useState([]);\n//   const [message, setMessage] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const router = useRouter();\n//   useEffect(() => {\n//     fetch(\"http://localhost:8080/image/divisions\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (Array.isArray(data)) {\n//           setDivisions(data);\n//         } else {\n//           console.error(\"Error: Divisions data is not an array\");\n//         }\n//       })\n//       .catch((error) => console.error(\"Error fetching divisions:\", error));\n//   }, []);\n//   const handleFileChange = (event) => {\n//     const file = event.target.files[0];\n//     if (file && file.type.startsWith(\"image/\")) {\n//       setImageFile(file);\n//     } else {\n//       alert(\"Please select a valid image file\");\n//     }\n//   };\n//   const handleFileNameChange = (event) => {\n//     setFileName(event.target.value);\n//   };\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     if (!imageFile) {\n//       alert(\"Please select an image file\");\n//       return;\n//     }\n//     if (!fileName) {\n//       alert(\"Please enter a file name\");\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"file\", imageFile, fileName);\n//     formData.append(\n//       \"metadata\",\n//       JSON.stringify({\n//         description,\n//         Division: newDivision || division,\n//       })\n//     );\n//     setIsLoading(true);\n//     try {\n//       const response = await fetch(\"http://localhost:8080/image/create\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n//       const result = await response.json();\n//       console.log(result);\n//       if (response.ok) {\n//         setMessage(\"File uploaded successfully\");\n//       } else {\n//         setMessage(\"Error uploading file\");\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       setMessage(\"Error uploading file\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     router.push(\"/Login\");\n//   };\n//   return (\n//     <div className={styles[\"upload-container\"]}>\n//       <h2>Upload Image</h2>\n//       {message && <div className={styles[\"message\"]}>{message}</div>}\n//       <form onSubmit={handleSubmit}>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"imageFile\">Select Image File:</label>\n//           <br />\n//           <input\n//             type=\"file\"\n//             id=\"imageFile\"\n//             name=\"imageFile\"\n//             accept=\"image/*\"\n//             onChange={handleFileChange}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"fileName\">Enter File Name:</label>\n//           <br />\n//           <input\n//             type=\"text\"\n//             id=\"fileName\"\n//             name=\"fileName\"\n//             value={fileName}\n//             onChange={handleFileNameChange}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"description\">Description:</label>\n//           <br />\n//           <textarea\n//             id=\"description\"\n//             name=\"description\"\n//             value={description}\n//             onChange={(e) => setDescription(e.target.value)}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"division\">Select Division:</label>\n//           <br />\n//           <select\n//             id=\"division\"\n//             name=\"division\"\n//             value={division}\n//             onChange={(e) => setDivision(e.target.value)}\n//             disabled={!!newDivision}\n//           >\n//             <option value=\"\">Select existing division</option>\n//             {divisions.map((div) => (\n//               <option key={div} value={div}>\n//                 {div}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"newDivision\">Or Enter New Division:</label>\n//           <br />\n//           <input\n//             type=\"text\"\n//             id=\"newDivision\"\n//             name=\"newDivision\"\n//             value={newDivision}\n//             onChange={(e) => setNewDivision(e.target.value)}\n//             disabled={!!division}\n//           />\n//         </div>\n//         <button\n//           type=\"submit\"\n//           className={styles[\"submit-button\"]}\n//           disabled={isLoading}\n//         >\n//           {isLoading ? \"Uploading...\" : \"Upload\"}\n//         </button>\n//         <button\n//           type=\"button\"\n//           className={styles[\"submit-button\"]}\n//           onClick={handleLogout}\n//         >\n//           Logout\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n// function UploadVideo() {\n//   const [videoFile, setVideoFile] = useState(null);\n//   const [fileName, setFileName] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [division, setDivision] = useState(\"\");\n//   const [newDivision, setNewDivision] = useState(\"\");\n//   const [divisions, setDivisions] = useState([]);\n//   const [message, setMessage] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const router = useRouter();\n//   useEffect(() => {\n//     fetch(\"http://localhost:8080/video/divisions\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (Array.isArray(data)) {\n//           setDivisions(data);\n//         } else {\n//           console.error(\"Error: Divisions data is not an array\");\n//         }\n//       })\n//       .catch((error) => console.error(\"Error fetching divisions:\", error));\n//   }, []);\n//   const handleFileChange = (event) => {\n//     const file = event.target.files[0];\n//     if (file && file.type.startsWith(\"video/\")) {\n//       setVideoFile(file);\n//     } else {\n//       alert(\"Please select a valid video file\");\n//     }\n//   };\n//   const handleFileNameChange = (event) => {\n//     setFileName(event.target.value);\n//   };\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     if (!videoFile) {\n//       alert(\"Please select a video file\");\n//       return;\n//     }\n//     if (!fileName) {\n//       alert(\"Please enter a file name\");\n//       return;\n//     }\n//     let finalFileName = fileName;\n//     if (!finalFileName.toLowerCase().endsWith(\".mp4\")) {\n//       finalFileName += \".mp4\";\n//     }\n//     const formData = new FormData();\n//     formData.append(\"file\", videoFile, finalFileName);\n//     formData.append(\n//       \"metadata\",\n//       JSON.stringify({\n//         description,\n//         Division: newDivision || division,\n//       })\n//     );\n//     setIsLoading(true);\n//     try {\n//       const response = await fetch(\"http://localhost:8080/video/create\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n//       const result = await response.json();\n//       console.log(result);\n//       if (response.ok) {\n//         setMessage(\"File uploaded successfully\");\n//       } else {\n//         setMessage(\"Error uploading file\");\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       setMessage(\"Error uploading file\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     router.push(\"/Login\");\n//   };\n//   return (\n//     <div className={styles[\"upload-container\"]}>\n//       <h2>Upload Video</h2>\n//       {message && <div className={styles[\"message\"]}>{message}</div>}\n//       <form onSubmit={handleSubmit}>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"videoFile\">Select Video File:</label>\n//           <br />\n//           <input\n//             type=\"file\"\n//             id=\"videoFile\"\n//             name=\"videoFile\"\n//             accept=\"video/*\"\n//             onChange={handleFileChange}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"fileName\">Enter File Name:</label>\n//           <br />\n//           <input\n//             type=\"text\"\n//             id=\"fileName\"\n//             name=\"fileName\"\n//             value={fileName}\n//             onChange={handleFileNameChange}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"description\">Description:</label>\n//           <br />\n//           <textarea\n//             id=\"description\"\n//             name=\"description\"\n//             value={description}\n//             onChange={(e) => setDescription(e.target.value)}\n//           />\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"division\">Select Division:</label>\n//           <br />\n//           <select\n//             id=\"division\"\n//             name=\"division\"\n//             value={division}\n//             onChange={(e) => setDivision(e.target.value)}\n//             disabled={!!newDivision}\n//           >\n//             <option value=\"\">Select existing division</option>\n//             {divisions.map((div) => (\n//               <option key={div} value={div}>\n//                 {div}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n//         <div className={styles[\"form-group\"]}>\n//           <label htmlFor=\"newDivision\">Or Enter New Division:</label>\n//           <br />\n//           <input\n//             type=\"text\"\n//             id=\"newDivision\"\n//             name=\"newDivision\"\n//             value={newDivision}\n//             onChange={(e) => setNewDivision(e.target.value)}\n//             disabled={!!division}\n//           />\n//         </div>\n//         <button\n//           type=\"submit\"\n//           className={styles[\"submit-button\"]}\n//           disabled={isLoading}\n//         >\n//           {isLoading ? \"Uploading...\" : \"Upload\"}\n//         </button>\n//         <button\n//           type=\"button\"\n//           className={styles[\"submit-button\"]}\n//           onClick={handleLogout}\n//         >\n//           Logout\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\nfunction UploadForm() {\n    _s();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true), showPDF = ref[0], setShowPDF = ref[1];\n    var ref1 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false), showImage = ref1[0], setShowImage = ref1[1];\n    var ref2 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false), showVideo = ref2[0], setShowVideo = ref2[1];\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (_upload_module_scss__WEBPACK_IMPORTED_MODULE_6___default()[\"upload-form-container\"]),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: (_upload_module_scss__WEBPACK_IMPORTED_MODULE_6___default()[\"toggle-buttons\"]),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: showPDF ? (_upload_module_scss__WEBPACK_IMPORTED_MODULE_6___default().active) : \"\",\n                        onClick: function() {\n                            setShowPDF(true);\n                            setShowImage(false);\n                            setShowVideo(false);\n                        },\n                        children: \"Upload PDF\"\n                    }, void 0, false, {\n                        fileName: \"/Users/akulrajeevan/Internship/Web/CAM-project/components/uploadForm/uploadForm.js\",\n                        lineNumber: 658,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: showImage ? (_upload_module_scss__WEBPACK_IMPORTED_MODULE_6___default().active) : \"\",\n                        onClick: function() {\n                            setShowPDF(false);\n                            setShowImage(true);\n                            setShowVideo(false);\n                        },\n                        children: \"Upload Image\"\n                    }, void 0, false, {\n                        fileName: \"/Users/akulrajeevan/Internship/Web/CAM-project/components/uploadForm/uploadForm.js\",\n                        lineNumber: 668,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: showVideo ? (_upload_module_scss__WEBPACK_IMPORTED_MODULE_6___default().active) : \"\",\n                        onClick: function() {\n                            setShowPDF(false);\n                            setShowImage(false);\n                            setShowVideo(true);\n                        },\n                        children: \"Upload Video\"\n                    }, void 0, false, {\n                        fileName: \"/Users/akulrajeevan/Internship/Web/CAM-project/components/uploadForm/uploadForm.js\",\n                        lineNumber: 678,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/akulrajeevan/Internship/Web/CAM-project/components/uploadForm/uploadForm.js\",\n                lineNumber: 657,\n                columnNumber: 7\n            }, this),\n            showPDF && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_uploadPDF_uploadPDF__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/akulrajeevan/Internship/Web/CAM-project/components/uploadForm/uploadForm.js\",\n                lineNumber: 689,\n                columnNumber: 19\n            }, this),\n            showImage && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_uploadIMG_uploadIMG__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/akulrajeevan/Internship/Web/CAM-project/components/uploadForm/uploadForm.js\",\n                lineNumber: 690,\n                columnNumber: 21\n            }, this),\n            showVideo && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(UploadVideo, {}, void 0, false, {\n                fileName: \"/Users/akulrajeevan/Internship/Web/CAM-project/components/uploadForm/uploadForm.js\",\n                lineNumber: 691,\n                columnNumber: 21\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/akulrajeevan/Internship/Web/CAM-project/components/uploadForm/uploadForm.js\",\n        lineNumber: 656,\n        columnNumber: 5\n    }, this);\n};\n_s(UploadForm, \"5SQrbwcgQlDkuH7LjZbDIDo/nNc=\");\n_c = UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/uploadForm/uploadForm.js\n"));

/***/ })

});